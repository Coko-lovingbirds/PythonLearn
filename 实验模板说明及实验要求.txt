
==================================================================================
模板使用说明：


利用 Jupyter Notebook 填写实验报告，报告中需呈现实验结果，注意要删除原模板中的红色字样。三个实验作为三个文件单独执行，这样打印的时候每个实验报告可以从新的一页开始。交纸质版实验报告时需要加上封面，并填写学生信息。

==================================================================================
实验一、实现sobel滤波器对图像进行边缘提取

实验要求：
1.掌握python语言基础和相关语法；
2.会用matplotlib、PIL等模块实现图像的读取和显示；
3.掌握numpy的array切片等基本操作；
4.理解sobel滤波器的原理，理解图像边缘提取和滤波器操作原理。

具体实现步骤参照：

1. 导入彩色图像
2. 转成灰度图像
3. 实现sobel滤波操作 
4. 显示图像


实验二、机器学习编程基础（直线拟合）

实验要求：
1.掌握python语言基础和相关语法，基于python实现直线拟合；  
2.掌握相关程序包numpy、pandas，来实现随机数生成和数据文件的读写；   
3.能够利用matplotlib实现数据可视化；  
4.掌握最小二乘理论，能利用最小二乘理论的闭式解进行直线拟合；  
5.学会利用机器学习程序包sklearn，能够利用LinearRegression模块实现直线拟合。 

具体实现步骤参照：

1. 定义两组随机数（100个以上）X，E，定义Y = a + b*X + E，a，b自行设置；
2. 保存为Excel文件，分别保存为X_data和Y_data列,并从excel文件读取数据
3. 编程最小二乘拟合，求a’ 和 b’ 
4. 数据可视化（包括X，Y的散点图和拟合出来的直线）
5. 利用sklearn自带LinearRegression拟合

实验三、梯度下降算法实现与分析
  
1.掌握随机梯度下降和mini-batch梯度下降算法原理；    
2.在实验二基础上，分别实现基于随机梯度下降和mini-batch梯度下降算法的直线拟合（不能调用梯度下降程序包）；  
3.通过调整学习率、mini-batch的batchsize、以及迭代次数等关键参数，分析这些参数对算法的影响；  
4.分析和对比两类算法。


实验四、手写数字分类
  
1.学会导入sklearn自带MNIST数据库；  
2.采用任何一种传统的机器学习（深度学习除外）算法（包括SVM、随机森林等）实现手写数字分类，使得分类准确率达到97%以上；   
3.利用混淆矩阵等相关方法对分类准确率进行分析。

实验五、基于深度神经网络的手写数字分类

1、学会一种深度学习平台的安装，如tensorflow、pytorch、keras等；
2、学会编写简单的深度神经网络，实现对手写数字进行分类；


====================================================================================
